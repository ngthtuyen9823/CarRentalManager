@startuml Car Rental Manager Entity Relationship Diagram

entity "Car" as car {
  *id: int
  --
  *name: string
  *brand: string
  *model: string
  *publishYear: int
  *color: string
  *price: int
  *licensePlate: string
  *status: ECarStatus
  ' enum ECarStatus {
    '   ONRENT = 'on-rent',
    '   AVAILABLE = 'available'
  '}
  *type: ECarType
  ' enum ECarType {
    ' BIKE = 'bike',
    ' MOTORBIKE = 'motorbike',
    ' CAR = 'car',
  '}
  *image: string
  +createdAt: date
  +updatedAt: date
}

entity "Order" as order {
  *id: int
  --
  *carId: string
  *customerId: string
  --
  *startDate: date
  *endDate: date
  *bookingPlace: string
  *totalFee: string
  *status: EOrderStatus
  ' enum EOrderStatus {
    ' COMPLETED = 'completed',
    ' PENDING = 'pending',
    ' CANCELLED = 'cancelled',
  '}
  +createdAt: date
  +updatedAt: date
}

entity "Contract" as contract {
  *id: int
  --
  *orderId: string
  *userId: string
  --
  *makingDay: date
  +createdAt: date
  +updatedAt: date
}

entity "Receipt" as receipt {
  *id: int
  --
  *contractId: string
  --
  *makingDay: date
  *price: int
  +createdAt: date
  +updatedAt: date
}

entity "Customer" as customer {
  *id: int
	--
  *phoneNumber: string
	*name: string
	*email: string
	*cmnd: string
	*address: string
	+createdAt date
	+updatedAt date
}

entity "User" as user {
  *id: int
	--
	*email: string
  *password: string
	*name: string
  *phoneNumber: string
	*address: string
  *role: EUserRole
  'enum EUserRole {
    ' ADMIN = 'admin',
    ' MANAGER = 'manager',
    ' STAFF = 'staff',
  '
	+cmnd: string
	+createdAt date
	+updatedAt date
}

car ||..|| order
contract ||..|| order
user ||..|| contract
receipt }o..|| contract
customer ||..|{ order

@enduml